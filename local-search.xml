<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>日报</title>
    <link href="/2022/02/21/daily%20report/"/>
    <url>/2022/02/21/daily%20report/</url>
    
    <content type="html"><![CDATA[<h2 id="2022年"><a href="#2022年" class="headerlink" title="2022年"></a>2022年</h2><h3 id="2022-01-09"><a href="#2022-01-09" class="headerlink" title="2022.01.09"></a>2022.01.09</h3><ul><li>李宏毅机器学习分类简介</li><li>Batch Normalization</li><li>完成论文目录</li></ul><p>Sprintf()函数，将数据存入到指定的字符串</p><figure class="highlight c++"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">sprintf</span><span class="hljs-params">(<span class="hljs-type">char</span> *str, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *format, ...)</span></span><br></code></pre></td></tr></table></figure><h3 id="2022-01-10"><a href="#2022-01-10" class="headerlink" title="2022.01.10"></a>2022.01.10</h3><p>python的list.append()可能时间复杂度是O(n)，因为空间不足，会新开辟连续空间</p><p>list.pop(index) 删除指定索引元素</p><p>list.remove(value) 删除指定的值</p><p>list.pop() 删除最后一个元素</p><p>list.index(value) 找到value值得索引  </p><p>list.sort(reverse&#x3D;True) 排序 O(nlogn)</p><p>python中的<strong>函数参数中的冒号是参数的类型建议符，表示希望传入的实参的类型</strong>。**函数后面跟着的箭头是函数返回值的**类型建议符**，用来说明该函数返回的值是什么类型**。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">twoSum</span>(<span class="hljs-params">num1: <span class="hljs-built_in">int</span>, num2: <span class="hljs-built_in">int</span>=<span class="hljs-number">100</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>    <span class="hljs-built_in">sum</span> = num1 + num2<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">sum</span><br></code></pre></td></tr></table></figure><h4 id="leetcode-283-移动0"><a href="#leetcode-283-移动0" class="headerlink" title="leetcode 283. 移动0"></a>leetcode 283. 移动0</h4><p>描述：给定一个数组 <code>nums</code>，编写一个函数将所有 <code>0</code> 移动到数组的末尾，同时保持非零元素的相对顺序。</p><p>示例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c">输入: [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">3</span>,<span class="hljs-number">12</span>]<br>输出: [<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">12</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>]<br></code></pre></td></tr></table></figure><p>思路: 可以遍历数组，每次遇到一个非零数，就按索引从0开始，对数组赋值。最后将后面的数字变为零即可</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">moveZeroes</span>(<span class="hljs-params">self, nums: <span class="hljs-type">List</span>[<span class="hljs-built_in">int</span>]</span>) -&gt; <span class="hljs-literal">None</span>:<br>        index = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> num <span class="hljs-keyword">in</span> nums:<br>            <span class="hljs-keyword">if</span> num != <span class="hljs-number">0</span>:<br>                nums[index] = num<br>                index += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(index, <span class="hljs-built_in">len</span>(nums)):<br>            nums[i] = <br></code></pre></td></tr></table></figure><h3 id="2022-01-11"><a href="#2022-01-11" class="headerlink" title="2022.01.11"></a>2022.01.11</h3><ul><li>CNN的两种解释方法</li><li>leetcode 27</li></ul><h3 id="2022-01-12"><a href="#2022-01-12" class="headerlink" title="2022.01.12"></a>2022.01.12</h3><ul><li><p>GCN的原理</p></li><li><p>李宏毅self-attention上</p><p>GCN就是在提取周围节点特征时，根据每个节点的信息，做了一个归一化</p></li></ul><h3 id="2022-01-13"><a href="#2022-01-13" class="headerlink" title="2022.01.13"></a>2022.01.13</h3><ul><li>李宏毅Self-attention下</li><li>GAT原理</li></ul><ol><li><p>GAT 自动学习节点之间互相的影响度</p></li><li><p>torch.nn.parameter  生成可训练的参数</p></li><li><p>torch.nn.init.xavier_uniform(tensor, gain&#x3D;1)  用一个均匀分布生成值，填充输入的张量或变量</p><p><strong>参数：</strong></p></li></ol><p>​      <strong>tensor</strong> – n维的torch.Tensor</p><p>​      <strong>gain</strong> - 可选的缩放因子  </p>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PS3</tag>
      
      <tag>Games</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/02/21/hello-world/"/>
    <url>/2022/02/21/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Games</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
